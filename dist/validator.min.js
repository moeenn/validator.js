import validators from"./validators";const validations=new Map([["required",validators.required],["aplha",validators.alpha],["num",validators.num],["alphanumeric",validators.alphanumeic],["minlength",validators.minlength],["maxlength",validators.maxlength],["min",validators.min],["max",validators.max],["same",validators.same]]);function get_form_fields(e){e=e.querySelectorAll("input:not(input[type='submit'])");if(!e)throw new Error("Provided form does not have any valid input fields");return[...e]}function clear_previous_errors(e){const r=e.querySelectorAll("[data-validator]");r.forEach(e=>e.remove())}function create_error_element(e,r){const a=document.createElement("p");return a.dataset.validator=e,a.classList.add("error"),validations.get(e)&&(a.innerText=r),a}function contains_error(e,r){e=e.querySelectorAll(".error");return 0!==e.length&&-1!==[...e].findIndex(e=>e.dataset.validation_name===r)}function show_error(e,r,a){a=create_error_element(r,a);const t=e.parentElement;t&&(contains_error(t,r)||t.appendChild(a))}export default function validate(e){const r=get_form_fields(e);clear_previous_errors(e);const l=[];return r.forEach(e=>{var r,a,t,o=e.dataset,n=e.value;for([r,a]of Object.entries(o)){const i=validations.get(r);i||(console.warn(`Unrecognized validator: ${r}`),l.push(!1)),i&&(t=i({input:n,validator_value:a}),l.push(t.is_valid),!t.is_valid&&t.message&&show_error(e,r,t.message))}}),l.every(e=>e)}
